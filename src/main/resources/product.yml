openapi: '3.0.2'
info:
  title: Product API
  version: '1.0'
servers:
  - url: https://api.server.test/v1
tags:
  - name: product
    description: Product CRUD
paths:
  /products/{productId}:
    get:
      tags:
        - product
      summary: Find product by id
      description: Find product by id
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Invalid product id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400:
                  value:
                    code: PRODUCT_ERR_1
                    operationId: getProductById
                    message: Invalid product id
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                404:
                  value:
                    code: PRODUCT_ERR_2
                    operationId: getProductById
                    message: Product not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
              examples:
                500:
                  value:
                    code: PRODUCT_ERR_3
                    operationId: getProductById
                    message: java.lang.NullPointerException
  /products:
    post:
      tags:
        - product
      summary: Add a new product to the store
      description: Add a new product to the store
      operationId: addProduct
      requestBody:
        description: Create a new product in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Invalid input param
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                400:
                  value:
                    code: PRODUCT_ERR_4
                    operationId: addProduct
                    message: Invalid input param
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                500:
                  value:
                    code: PRODUCT_ERR_5
                    operationId: addProduct
                    message: java.lang.NullPointerException
components:
  schemas:
    ProductRequest:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
          example: Product name
        description:
          type: string
          example: Product description
    ProductResponse:
      type: object
      properties:
        name:
          type: string
          example: MyProduct
        description:
          type: string
          example: abcdefg
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: api error code
        operationId:
          type: string
          description: api handler function
        message:
          type: string
          description: api error message
